version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    healthcheck:
      test: ['CMD', 'kafka-topics', '--bootstrap-server', 'localhost:9093', '--list']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_METRICS_PORT=9997
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - DYNAMIC_CONFIG_ENABLED='true'

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init_schemas.sql:/docker-entrypoint-initdb.d/init_schemas.sql
    ports:
      - "5432:5432"
    restart: always

  orders:
    build:
      context: ./orders
    container_name: orders
    environment:
      - KAFKA__HOST=kafka
      - KAFKA__PORT=9093
      - POSTGRES__DSN=postgres://orders_user:orders_password@postgres:5432/orders
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8001:8000"
    volumes:
      - "./orders:/orders"

  payment:
    build:
      context: ./payment
    container_name: payment
    environment:
      - KAFKA__HOST=kafka
      - KAFKA__PORT=9093
      - POSTGRES__DSN=postgres://payment_user:payment_password@postgres:5432/payment
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8002:8000"
    volumes:
      - "./payment:/payment"

  shipping:
    build:
      context: ./shipping
    container_name: shipping
    environment:
      - KAFKA__HOST=kafka
      - KAFKA__PORT=9093
      - POSTGRES__DSN=postgres://shipping_user:shipping_password@postgres:5432/shipping
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8004:8000"
    volumes:
      - "./shipping:/shipping"

  notifications:
    build:
      context: ./notifications
    container_name: notifications
    environment:
      - KAFKA__HOST=kafka
      - KAFKA__PORT=9093
      - POSTGRES__DSN=postgres://notification_user:notification_password@postgres:5432/notifications
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8003:8000"
    volumes:
      - "./notifications:/notifications"
